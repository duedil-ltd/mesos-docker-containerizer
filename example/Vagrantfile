# -*- mode: ruby -*-
# vi: set ft=ruby :

# Install docker
$setup = <<SCRIPT
set -e

# Add docker apt repository
wget -q -O - https://get.docker.io/gpg | sudo apt-key add -
sudo bash -c "echo 'deb http://get.docker.io/ubuntu docker main' > /etc/apt/sources.list.d/docker.list"

# Add mesosphere apt repository
sudo apt-key adv --keyserver keyserver.ubuntu.com --recv E56151BF
echo "deb http://repos.mesosphere.io/ubuntu precise main" | \
  sudo tee /etc/apt/sources.list.d/mesosphere.list

sudo apt-get -y update
sudo apt-get update -q
sudo apt-get install -q -y \
  htop \
  python-virtualenv \
  lxc-docker-1.3.0 \
  mesos=0.21.0-1.0.ubuntu1204

# easymode for docker use as vagrant user
sudo usermod -a -G docker vagrant

sudo rm /etc/init/mesos-*
SCRIPT

Vagrant.configure("2") do |config|

  # Use the base ubuntu box
  config.vm.box = "phusion/ubuntu-14.04-amd64"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  config.vm.network :private_network, ip: "192.168.100.2"

  # Share the containerizer source into the VM
  config.vm.synced_folder "../", "/opt/mesos-docker-containerizer"

  # Configure the VM with 1024Mb of RAM and 2 CPUs
  config.vm.provider :virtualbox do |vb|
    vb.customize ["modifyvm", :id, "--memory", "1024"]
    vb.customize ["modifyvm", :id, "--cpus", "2"]
    vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
  end

  # Install all the things!
  config.vm.provision "shell", inline: $setup
end
